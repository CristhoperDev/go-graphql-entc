// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AuthorsColumns holds the columns for the "authors" table.
	AuthorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "status", Type: field.TypeInt8, Default: 1},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "full_name", Type: field.TypeString},
		{Name: "age", Type: field.TypeInt8},
	}
	// AuthorsTable holds the schema information for the "authors" table.
	AuthorsTable = &schema.Table{
		Name:        "authors",
		Columns:     AuthorsColumns,
		PrimaryKey:  []*schema.Column{AuthorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FilmsColumns holds the columns for the "films" table.
	FilmsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "status", Type: field.TypeInt8, Default: 1},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
	}
	// FilmsTable holds the schema information for the "films" table.
	FilmsTable = &schema.Table{
		Name:        "films",
		Columns:     FilmsColumns,
		PrimaryKey:  []*schema.Column{FilmsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FilmAuthorsColumns holds the columns for the "film_authors" table.
	FilmAuthorsColumns = []*schema.Column{
		{Name: "film_id", Type: field.TypeUUID},
		{Name: "author_id", Type: field.TypeUUID},
	}
	// FilmAuthorsTable holds the schema information for the "film_authors" table.
	FilmAuthorsTable = &schema.Table{
		Name:       "film_authors",
		Columns:    FilmAuthorsColumns,
		PrimaryKey: []*schema.Column{FilmAuthorsColumns[0], FilmAuthorsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "film_authors_film_id",
				Columns: []*schema.Column{FilmAuthorsColumns[0]},

				RefColumns: []*schema.Column{FilmsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "film_authors_author_id",
				Columns: []*schema.Column{FilmAuthorsColumns[1]},

				RefColumns: []*schema.Column{AuthorsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthorsTable,
		FilmsTable,
		FilmAuthorsTable,
	}
)

func init() {
	FilmAuthorsTable.ForeignKeys[0].RefTable = FilmsTable
	FilmAuthorsTable.ForeignKeys[1].RefTable = AuthorsTable
}
